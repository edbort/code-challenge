{
	"info": {
		"_postman_id": "6e6e97f8-a246-4749-b14a-2089fb0d556d",
		"name": "Husky Challeng Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get the lasts N days account movement - Cached queries",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/account/movement/{{account_id}}/{{n_days}}",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"account",
						"movement",
						"{{account_id}}",
						"{{n_days}}"
					]
				},
				"description": "Get all transactions for an specific account from the lasts N days (including today). \n\nIf MemCache server is available and there is no cache problem, the cached parameter in result should be returned as true."
			},
			"response": []
		},
		{
			"name": "Get the lasts N days account movement - Database query",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/account/movement/db/{{account_id}}/{{n_days}}",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"account",
						"movement",
						"db",
						"{{account_id}}",
						"{{n_days}}"
					]
				},
				"description": "Get all transactions for an specific account from the lasts N days (including today), using database query method.\n"
			},
			"response": []
		},
		{
			"name": "Create New Transaction",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/account/transaction/add/{{account_id}}/2020-02-09 10:10/Teste Edison/77.99",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"account",
						"transaction",
						"add",
						"{{account_id}}",
						"2020-02-09 10:10",
						"Teste Edison",
						"77.99"
					]
				},
				"description": "Create a new transaction in order to test how the application will handle old caches."
			},
			"response": []
		},
		{
			"name": "Cache  - Get a stored object",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/admin/cache/{{account_id}}-{{n_days}}d",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"admin",
						"cache",
						"{{account_id}}-{{n_days}}d"
					]
				},
				"description": "Cache ADMIN - Get a object from MemCache as it was stored"
			},
			"response": []
		},
		{
			"name": "Cache - Remove a stored object",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/admin/cache/{{account_id}}-{{n_days}}d",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"admin",
						"cache",
						"{{account_id}}-{{n_days}}d"
					]
				},
				"description": "Cache ADMIN - Remove a stored object from MemCache server"
			},
			"response": []
		},
		{
			"name": "Cache - Build all caches for an Account",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}:{{port}}/admin/cache/build/{{account_id}}",
					"host": [
						"{{server}}"
					],
					"port": "{{port}}",
					"path": [
						"admin",
						"cache",
						"build",
						"{{account_id}}"
					]
				},
				"description": "Cache ADMIN - Rebuild all caches for an specific account"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}
